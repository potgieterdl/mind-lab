<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="http://blog.myhq.co.za/feed.xml" rel="self" type="application/atom+xml" /><link href="http://blog.myhq.co.za/" rel="alternate" type="text/html" /><updated>2018-01-09T19:04:58+00:00</updated><id>http://blog.myhq.co.za/</id><title type="html">Mind Lab</title><subtitle>The science of thinking, written down</subtitle><entry><title type="html">HAProxy SSL from creation</title><link href="http://blog.myhq.co.za/Setup-HAProxy-SSL" rel="alternate" type="text/html" title="HAProxy SSL from creation" /><published>2018-01-08T12:00:00+00:00</published><updated>2018-01-08T12:00:00+00:00</updated><id>http://blog.myhq.co.za/Setup-HAProxy-SSL</id><content type="html" xml:base="http://blog.myhq.co.za/Setup-HAProxy-SSL">&lt;h1 id=&quot;haproxy-ssl-from-creation&quot;&gt;HAProxy SSL from creation&lt;/h1&gt;

&lt;h2 id=&quot;backstory&quot;&gt;Backstory&lt;/h2&gt;
&lt;p&gt;I recently needed to reload an (soon to be) expired SSL cert for HAProxy. I use HAProxy as my SSL end point rather than implementing the certs on each web server. I only allow a connection from this load balancer to the web servers (multiple instances) within a secure local network.&lt;/p&gt;

&lt;h2 id=&quot;easy-peasy&quot;&gt;Easy Peasy&lt;/h2&gt;

&lt;h4 id=&quot;step-1---generate-your-own-server-private-rsa-key&quot;&gt;Step 1 - Generate your own server private RSA key&lt;/h4&gt;
&lt;p&gt;You need to create your own private key from which you generate the CSR. Keep this key private and in a safe place&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openssl genrsa &lt;span class=&quot;nt&quot;&gt;-out&lt;/span&gt; mywebserver.key 2048&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;step-2---create-the-csr-certificate-signing-request-for-ssl-provider&quot;&gt;Step 2 - Create the CSR (certificate signing request) for SSL Provider&lt;/h4&gt;
&lt;p&gt;The CSR is generated against the private key above and sent too your SSL provider. In my case RapidSSL. It contains only basic data about your company and &lt;em&gt;remember&lt;/em&gt; to not input an email or password at all. This seems to fail for me&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openssl req &lt;span class=&quot;nt&quot;&gt;-new&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-key&lt;/span&gt; mywebserver.key &lt;span class=&quot;nt&quot;&gt;-out&lt;/span&gt; mywebserver.crt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;step-3---request-a-new-ssl-certificate&quot;&gt;Step 3 - Request a new SSL certificate&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://www.whichssl.com/top-10-ssl-certificate-providers.php&quot;&gt;Here is a link to the top providers&lt;/a&gt;. Your need might vary, but in my case i wanted the secure icon and green address bar in the browser and paid a little extra for this type of certificate.&lt;/p&gt;

&lt;p&gt;The process is unique per vendor, but should be very simple.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Decide on type of cert, either single domain (www.mydomain.com) or multi/wildcard (*.mydomain.com)&lt;/li&gt;
  &lt;li&gt;If its your first time and you want a verfied cert the vendor might ask for physical documentation, this is part of the verification process.&lt;/li&gt;
  &lt;li&gt;At this point you should be asked for your CSR generated in step 2 above. Copy the text, making sure not to accidentally remove and — or changing the format.&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;-----BEGIN CERTIFICATE REQUEST-----
MIICvDCCAaQCAQAwdzELMAkGA1UEBhMCVVMxDTALBgNVBAgMBFV0YWgxDzANBgNV
BAcMBkxpbmRvbjEWMBQGA1UECgwNRGlnaUNlcnQgSW5jLjERMA8GA1UECwwIRGln
aUNlcnQxHTAbBgNVBAMMFGV4YW1wbGUuZGlnaWNlcnQuY29tMIIBIjANBgkqhkiG
9w0BAQEFAAOCAQ8AMIIBCgKCAQEA8+To7d+2kPWeBv/orU3LVbJwDrSQbeKamCmo
wp5bqDxIwV20zqRb7APUOKYoVEFFOEQs6T6gImnIolhbiH6m4zgZ/CPvWBOkZc+c
1Po2EmvBz+AD5sBdT5kzGQA6NbWyZGldxRthNLOs1efOhdnWFuhI162qmcflgpiI
WDuwq4C9f+YkeJhNn9dF5+owm8cOQmDrV8NNdiTqin8q3qYAHHJRW28glJUCZkTZ
wIaSR6crBQ8TbYNE0dc+Caa3DOIkz1EOsHWzTx+n0zKfqcbgXi4DJx+C1bjptYPR
BPZL8DAeWuA8ebudVT44yEp82G96/Ggcf7F33xMxe0yc+Xa6owIDAQABoAAwDQYJ
KoZIhvcNAQEFBQADggEBAB0kcrFccSmFDmxox0Ne01UIqSsDqHgL+XmHTXJwre6D
hJSZwbvEtOK0G3+dr4Fs11WuUNt5qcLsx5a8uk4G6AKHMzuhLsJ7XZjgmQXGECpY
Q4mC3yT3ZoCGpIXbw+iP3lmEEXgaQL0Tx5LFl/okKbKYwIqNiyKWOMj7ZR/wxWg/
ZDGRs55xuoeLDJ/ZRFf9bI+IaCUd1YrfYcHIl3G87Av+r49YVwqRDT0VDV7uLgqn
29XI1PpVUNCPQGn9p/eX6Qo7vpDaPybRtA2R7XLKjQaF9oXWeCUqy1hvJac9QFO2
97Ob1alpHPoZ7mWiEuJwjBPii6a9M9G30nUo39lBi1w=
-----END CERTIFICATE REQUEST-----&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;step-4---download-sometimes-sent-via-email-your-certificates-from-provider-and-generate-pem&quot;&gt;Step 4 - Download (sometimes sent via email) your certificates from provider and generate .pem&lt;/h4&gt;
&lt;p&gt;For HAProxy you require a .pem file. This involves taking the X.509 certs from your provider and concatenating them together into a single .pem file (nothing other than several keys in one file)&lt;/p&gt;

&lt;p&gt;This part was tricky to understand, my provider RapidSSL gave me two files, a ServerCertificate.cer (my new certificate) and an intermediate certificate (representing them). I also needed to add my server key (generated in step 1) into this file, ie 3 keys in total&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;ServerCertificate.cer &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; mydomain.com.pem
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;mywebserver.key &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; mydomain.com.pem
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;Intermediate.cer &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; mydomain.com.pem&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You should have 3 keys in this file now, double check with &lt;code class=&quot;highlighter-rouge&quot;&gt;$ cat mydomain.com.pem&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;step-5---add-to-haproxy-and-restart&quot;&gt;Step 5 - Add to HAProxy and restart&lt;/h4&gt;
&lt;p&gt;Next step is too add this .pem file to HAProxy. I normally put this .pem file in &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/ssl/private/mydomain.com.pem&lt;/code&gt; and then add the below into HAProxy config (&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/haproxy/haproxy.cfg&lt;/code&gt;)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;global
    ...
    ...
    &lt;span class=&quot;c&quot;&gt;# Default SSL material locations&lt;/span&gt;
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    tune.ssl.default-dh-param 2048
    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
    ssl-default-bind-options no-sslv3
    ...
    ...

frontend http
        &lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt; :80
        http-request set-header X-SSL %[ssl_fc]

        redirect prefix https://www.mydomain.com code 301 &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; hdr&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;host&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; mydomain.com &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        redirect prefix https://www.mydomain.com code 301 &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; hdr&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;host&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; www.mydomain.com &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        redirect scheme https &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!{&lt;/span&gt; ssl_fc &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

frontend ssl
        &lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt; :443 ssl crt mydomain.com.pem no-sslv3
        &lt;span class=&quot;c&quot;&gt;#bind :80 //comment port 80 out as we want to redirect  80 to 443&lt;/span&gt;
        ...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Restart HAProxy, depending on OS, &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo /etc/init.d/haproxy restart&lt;/code&gt;. I have found that sometime doing a &lt;code class=&quot;highlighter-rouge&quot;&gt;stop&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;start&lt;/code&gt; seem to reload the confirm where &lt;code class=&quot;highlighter-rouge&quot;&gt;restart&lt;/code&gt; sometimes doesnt.&lt;/p&gt;

&lt;h4 id=&quot;congrats&quot;&gt;Congrats&lt;/h4&gt;
&lt;p&gt;This should conclude a successful SSL change over on your load balancer. If you want to test this, an easy one is to use &lt;a href=&quot;https://www.rapidsslonline.com/ssl-tools/ssl-checker.php&quot;&gt;RapidSSL’s online testing tool&lt;/a&gt; to verify your site works correctly now.&lt;/p&gt;</content><author><name>Derick Potgieter</name></author><category term="Code" /><summary type="html">HAProxy SSL from creation</summary></entry><entry><title type="html">Face Recognition on Home Assistant</title><link href="http://blog.myhq.co.za/face-recognition-with-camera" rel="alternate" type="text/html" title="Face Recognition on Home Assistant" /><published>2017-12-30T12:00:00+00:00</published><updated>2017-12-30T12:00:00+00:00</updated><id>http://blog.myhq.co.za/face-recognition-with-camera</id><content type="html" xml:base="http://blog.myhq.co.za/face-recognition-with-camera">&lt;h1 id=&quot;setup-face-recognition-on-home-assistant&quot;&gt;Setup Face Recognition on Home Assistant&lt;/h1&gt;

&lt;h2 id=&quot;backstory&quot;&gt;Backstory&lt;/h2&gt;
&lt;p&gt;In this segment we will configure your home assistant installation to recognize a member of your family and trigger an action via telegram bot. This notification will allow you to trigger another event, like opening a gate. In my case, a member of the family at the front door (think my parents) will send a telegram message to my phone with an image and their name, allowing me to open the door for them.&lt;/p&gt;

&lt;p&gt;This could be used for presence setting, for automatic unlocking of your security system or allowing friends to feed the dogs by automatically opening the yard gate for them. All while keeping you in the know if need be.&lt;/p&gt;

&lt;h2 id=&quot;azure-register-account-and-create-face-api-service&quot;&gt;Azure: Register account and create Face API service&lt;/h2&gt;

&lt;h3 id=&quot;create-new-azure-account&quot;&gt;Create new Azure account&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://azure.microsoft.com/en-us/free/&quot;&gt;Create Account&lt;/a&gt;, its free for 30 days and you get to play around with $200 worth of credit during this time frame. I already used this before and had to input my Credit Card to create the Face API service.&lt;/p&gt;

&lt;h3 id=&quot;create-face-api-service&quot;&gt;Create FACE API Service&lt;/h3&gt;
&lt;p&gt;Once in, you will need to create a new Cognitive Service for the Face API.&lt;/p&gt;

&lt;h4 id=&quot;step-1--create-service&quot;&gt;Step 1 : Create service&lt;/h4&gt;
&lt;p&gt;For more details and a start link, check out &lt;a href=&quot;https://azuremarketplace.microsoft.com/en/marketplace/apps/Microsoft.CognitiveServicesFace/?utm_source=mkt-CognitiveServicesFace&amp;amp;utm_content=fa9bbbf9741c49cebd4116d9a745ae04&amp;amp;utm_campaign=social&amp;amp;utm_medium=E&quot;&gt;Face API&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To get right into it, follow this link &lt;a href=&quot;https://portal.azure.com/#create/Microsoft.CognitiveServicesFace&quot;&gt;Create Face API&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I used the name &lt;code class=&quot;highlighter-rouge&quot;&gt;hass&lt;/code&gt; and resource group &lt;code class=&quot;highlighter-rouge&quot;&gt;hass&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;step-2--grab-access-keys&quot;&gt;Step 2 : Grab access keys&lt;/h4&gt;
&lt;p&gt;One your service is created, you can click on the Resource Management section under Keys. Copy KEY1, this is your API key needed in HA to make the service work&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/post-2017-12-30/ms-face-api-keys.png&quot; alt=&quot;Example Key Location&quot; class=&quot;img-responsive&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;segment-2-configure-ha&quot;&gt;Segment 2: Configure HA&lt;/h2&gt;

&lt;h3 id=&quot;camera&quot;&gt;Camera&lt;/h3&gt;

&lt;h4 id=&quot;setup-your-camera&quot;&gt;Setup your camera&lt;/h4&gt;
&lt;p&gt;The faces api requires a source, and the most likely source is a camera already connected to HA. We will quickly go over the basics here, but it will depend on your cameral. &lt;a href=&quot;https://home-assistant.io/components/camera/&quot;&gt;Check here for possible options&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi devices/cameras.yaml

&lt;span class=&quot;c&quot;&gt;### viewing devices/cameras.yaml ### &lt;/span&gt;
- platform: ffmpeg
  name: Back Yard
  input: rtsp://user:pass@x.x.x.x:554/snl/live/1/1
  extra_arguments: &lt;span class=&quot;nt&quot;&gt;-an&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt;:v 25&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;image-processing-face-api&quot;&gt;Image Processing (Face API)&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi image_processing.yaml

&lt;span class=&quot;c&quot;&gt;### viewing image_processing.yaml ### &lt;/span&gt;
- platform: microsoft_face_identify
  group: family
  confidence: 50
  &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt;:
    - entity_id: camera.back_yard&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;add-microsoft-face-service-in-configurationyaml&quot;&gt;Add Microsoft Face service in configuration.yaml&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi configuration.yaml

&lt;span class=&quot;c&quot;&gt;### viewing configuration.yaml ### &lt;/span&gt;
...
camera: &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;include devices/cameras.yaml
image_processing: &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;include image_processing.yaml
...

...
microsoft_face:
  api_key: abcdefghijklmnopqrstuv
  azure_region: westeurope&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;restart-and-check-the-logs&quot;&gt;Restart and check the logs&lt;/h4&gt;
&lt;p&gt;Once the above is configured, you should restart your Home Assistant and check the logs too see the faces api being called. This will happen strait after your camera getting an image, this same image is sent through too Face API for recognition&lt;/p&gt;

&lt;h4 id=&quot;congrats&quot;&gt;Congrats&lt;/h4&gt;
&lt;p&gt;This is really a glorified proof of concept. The amount of images sent for analysis to Microsoft`s Face API is insane, i logged couple thousand request in one day, almost using up my free account. For this to work and be free, we would need to only send the images when movement or a person is recognised locally and then send off to Microsoft. I’ll follow this blog post up with a more sustainable working prototype.&lt;/p&gt;</content><author><name>Derick Potgieter</name></author><category term="Home Assistant" /><summary type="html">Setup Face Recognition on Home Assistant</summary></entry><entry><title type="html">Installing Home Assistant - HASS.io</title><link href="http://blog.myhq.co.za/installing-home-assistant-on-ubuntu" rel="alternate" type="text/html" title="Installing Home Assistant - HASS.io" /><published>2017-12-18T11:21:17+00:00</published><updated>2017-12-18T11:21:17+00:00</updated><id>http://blog.myhq.co.za/installing-home-assistant-on-ubuntu</id><content type="html" xml:base="http://blog.myhq.co.za/installing-home-assistant-on-ubuntu">&lt;h1 id=&quot;ha-on-ubuntu-in-python-virtual-env&quot;&gt;HA on Ubuntu in Python Virtual Env&lt;/h1&gt;

&lt;h2 id=&quot;backstory&quot;&gt;Backstory&lt;/h2&gt;
&lt;p&gt;I’ve been playing with &lt;a href=&quot;https://home-assistant.io/&quot;&gt;Home Assistan&lt;/a&gt; (aka HA) for close on 2 months and with a couple years programming experience it has certainly helped me. But like many others new too dabble with home automation platforms it isn`t that simple and can be overwhelming. This series will hopefully guide you step by step in creation your own &lt;a href=&quot;https://home-assistant.io/&quot;&gt;Home Assistant&lt;/a&gt; setup&lt;/p&gt;

&lt;h2 id=&quot;introducing-home-assistant&quot;&gt;Introducing Home Assistant&lt;/h2&gt;
&lt;p&gt;There are multiple blogs detailing the &lt;a href=&quot;https://home-assistant.io/&quot;&gt;Home Assistant&lt;/a&gt; installs, so i’m not going to go over all of it again. This is specific to Debian 14.04 LTS and will work with Debian 16.04 as well.&lt;/p&gt;

&lt;h4 id=&quot;recommendation&quot;&gt;Recommendation&lt;/h4&gt;
&lt;p&gt;Unless you going the Raspberry PI route with hass, which is brilliant, i would go full virtual env for this setup. Easy to install and run&lt;/p&gt;

&lt;h4 id=&quot;step-1---installing-python&quot;&gt;Step 1 - Installing python&lt;/h4&gt;
&lt;p&gt;Make sure you have the needed python 3.5 (3.4 still supported but dwindling by the day)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;apt-get install python3-pip python3-venv&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;small class=&quot;recap&quot;&gt;
If using &lt;em&gt;Python 3.4&lt;/em&gt; on &lt;em&gt;Ubuntu 14.04&lt;/em&gt; you light have to change python3-venv to python3.4-venv
&lt;/small&gt;&lt;/p&gt;

&lt;h4 id=&quot;step-2---setup-env-and-install-homeassistant&quot;&gt;Step 2 - Setup env and install homeassistant&lt;/h4&gt;
&lt;p&gt;We want HA to run on its own with its own user so&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;useradd &lt;span class=&quot;nt&quot;&gt;-rm&lt;/span&gt; homeassistant&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Change directories to the folder you want to install HA into and set ownership to new user&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /srv
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mkdir homeassistant
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;chown homeassistant:homeassistant homeassistant&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Create virtual env activate&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python3 &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; venv homeassistant
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;homeassistant
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;source &lt;/span&gt;bin/activate&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Once you run the above command, you should see the beginning of prompt change to &lt;code class=&quot;highlighter-rouge&quot;&gt;$ (homeassistant) homeassistant@...&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now install HA inside the venv&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python3 &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; pip install homeassistant&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;small class=&quot;recap&quot;&gt;
You have now created a new user called &lt;code class=&quot;highlighter-rouge&quot;&gt;homeassistant&lt;/code&gt; and installed HA in the folder &lt;code class=&quot;highlighter-rouge&quot;&gt;/srv/homeassistant&lt;/code&gt; using a python virtual env. &lt;em&gt;For reference, when you upgrade or want to run home assistant, you need to do so in the virtual env.&lt;/em&gt; &lt;mark&gt; For reference, when you upgrade or want to run the HA, you need to do so in the virtual env&lt;/mark&gt;
&lt;/small&gt;&lt;/p&gt;

&lt;h4 id=&quot;step-3---configure-runtime-and-auto-start&quot;&gt;Step 3 - Configure runtime and auto-start&lt;/h4&gt;
&lt;p&gt;The preferred way would be to auto start Home Assistant with a init script&lt;/p&gt;

&lt;p&gt;Create a file under /etc/init.d/hass-daemon and copy the script at the end of this post into it&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vi /etc/init.d/hass-daemon&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Once you have copied the script (end of this post) into the above file, you need to set the execute permission on the script for auto-startup (on boot)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;chmod +x /etc/init.d/hass-daemon&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;step-4---first-run&quot;&gt;Step 4 - First run&lt;/h4&gt;
&lt;p&gt;Ensure you are in the &lt;code class=&quot;highlighter-rouge&quot;&gt;/srv/homeassistant&lt;/code&gt; folder and run :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;hass &lt;span class=&quot;nt&quot;&gt;--open-ui&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This will start HA for the first time and install the necessary libraries needed by the modules in use. Any failures are easier to spot this way vs doing the daemon run which wount print out anything. You need to view the log in &lt;code class=&quot;highlighter-rouge&quot;&gt;tail -f /home/homeassistant/.homeassistant/homeassistant.log&lt;/code&gt; to see any output from the auto-start script.&lt;/p&gt;

&lt;p&gt;Once this initial run is complete, press &lt;code class=&quot;highlighter-rouge&quot;&gt;crtl+c&lt;/code&gt; to exit and then start using the init script &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo /etc/init.d/hass-daemon start&lt;/code&gt;, view the output using above tail command on the log file.&lt;/p&gt;

&lt;h4 id=&quot;congrats&quot;&gt;Congrats&lt;/h4&gt;
&lt;p&gt;This is your basic installation done and dusted, up next we will be looking at the basic config needed to expose your installation via SSL to the outside work. The preferred way being via a custom domain with SSL cert.&lt;/p&gt;

&lt;h5 id=&quot;python-virtual-start-up-script&quot;&gt;Python Virtual Start-up Script&lt;/h5&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### BEGIN INIT INFO&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Provides:          hass&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Required-Start:    $local_fs $network $named $time $syslog&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Required-Stop:     $local_fs $network $named $time $syslog&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Default-Start:     2 3 4 5&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Default-Stop:      0 1 6&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Description:       Home\ Assistant&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### END INIT INFO&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# /etc/init.d Service Script for Home Assistant&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Created with: https://gist.github.com/naholyr/4275302#file-new-service-sh&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;PRE_EXEC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cd /srv/homeassistant &amp;amp;&amp;amp; python3 -m venv . &amp;amp;&amp;amp; source bin/activate &amp;amp;&amp;amp;&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;RUN_AS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;homeassistant&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;PID_FILE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/var/run/hass/hass.pid&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;CONFIG_DIR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/home/homeassistant/.homeassistant&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;FLAGS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;-v --config &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$CONFIG_DIR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; --pid-file &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PID_FILE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; --daemon&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;REDIRECT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$CONFIG_DIR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/home-assistant.log 2&amp;gt;&amp;amp;1&quot;&lt;/span&gt;

start&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$PID_FILE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;kill&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$PID_FILE&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; 2&amp;gt; /dev/null&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Service already running'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&amp;amp;2
    &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;1
  &lt;span class=&quot;k&quot;&gt;fi
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Starting service…'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&amp;amp;2
  &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CMD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PRE_EXEC&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HASS_BIN&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$FLAGS&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$REDIRECT&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;;&quot;&lt;/span&gt;
  su &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /bin/bash &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$CMD&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$RUN_AS&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Service started'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&amp;amp;2
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

stop&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PID_FILE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;kill&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PID_FILE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; 2&amp;gt; /dev/null&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Service not running'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&amp;amp;2
    &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;1
  &lt;span class=&quot;k&quot;&gt;fi
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Stopping service…'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&amp;amp;2
  &lt;span class=&quot;nb&quot;&gt;kill&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PID_FILE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;ps &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PID_FILE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /dev/null 2&amp;gt;&amp;amp;1&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;sleep 1&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Service stopped'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&amp;amp;2
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

install&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Installing Home Assistant Daemon (hass-daemon)&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;999999&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$PID_FILE&lt;/span&gt;
    chown &lt;span class=&quot;nv&quot;&gt;$RUN_AS&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$PID_FILE&lt;/span&gt;
    mkdir &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$CONFIG_DIR&lt;/span&gt;
    chown &lt;span class=&quot;nv&quot;&gt;$RUN_AS&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$CONFIG_DIR&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

uninstall&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Are you really sure you want to uninstall this service? That cannot be undone. [yes|No] &quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;SURE
  &lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;SURE
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SURE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;yes&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;stop
    rm &lt;span class=&quot;nt&quot;&gt;-fv&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PID_FILE&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Notice: The config directory has not been removed&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$CONFIG_DIR&lt;/span&gt;
    update-rc.d &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; hass-daemon remove
    rm &lt;span class=&quot;nt&quot;&gt;-fv&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Home Assistant Daemon has been removed. Home Assistant is still installed.&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in
  &lt;/span&gt;start&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    start
    &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
  stop&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    stop
    &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
  install&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    install
    &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
  uninstall&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    uninstall
    &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
  restart&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    stop
    start
    &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Usage: &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; {start|stop|restart|install|uninstall}&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;esac&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>Derick Potgieter</name></author><category term="Home Assistant" /><summary type="html">HA on Ubuntu in Python Virtual Env</summary></entry></feed>